require "Logic/HotfixCallback"

regist = {}


function Fetch( ... )
	Regist()

	local array = {}
	for k,v in pairs(regist) do
		--print(k)
		table.insert(array,k)
	end
	return table.unpack(array)
end


function  Regist( ... )
	-- k-[类名|方法名]  v-[回调]
	regist["Test|Inject"]  =  LuaTestInject 
	regist["Test|Inject2"] =  LuaTestBool 
	regist["Test|Inject3"] =  LuaTestStatic
	regist["Test|Inject4"] =  LuaTestArgs
	regist["Test|Inject5"] =  LuaTestNode
end



function  Dispacher( ... )

	local arg = {...}	
	local class = arg[1]
	local func = arg[2]
	local params = arg[3]	
	print("params length: "..tostring(params.Length))


	local k = tostring(class).."|"..tostring(func)
	print("lua Dispacher: "..tostring(k).."  "..tostring(regist[k] == nil))

	local luaF = regist[k]
	if luaF ~= nil then
		return luaF(params)
	else
		print("sorry luaf is nil")
	end
	return 0
end